# --- Database (Cloud SQL or external MySQL) ---
#spring.datasource.url=jdbc:mysql://34.123.111.254:3306/insuredpersondb?useSSL=false&serverTimezone=UTC
#spring.datasource.username=root
#spring.datasource.password=Root@123
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.docker.compose.enabled=false
# --- App Settings ---
spring.application.name=InsuredPerson

# --- Server port: Cloud Run injects $PORT, fallback 8080 for local ---
server.port=${PORT:8081}
server.error.include-message=always

# --- JWT (secret should come from env var in Cloud Run) ---
jwt.secret=${JWT_SECRET_KEY:defaultSecret}

# --- Mail Settings ---
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.username=springboottask@gmail.com
spring.mail.password=oblnkcpcrstngztm
app.mail.from=springboottask@gmail.com




#spring.application.name=InsuredPerson
#spring.docker.compose.enabled=false
#
#spring.datasource.url=${DB_URL}
#spring.datasource.username=${DB_USERNAME}
#spring.datasource.password=${DB_PASSWORD}
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#
## JPA / Hibernate settings
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
#
## Server port (optional, if 8080 is busy)
#server.port=8081
#server.error.include-message=always
#
#jwt.secret=${JWT_SECRET_KEY}
#
#
#spring.mail.host=smtp.gmail.com
#spring.mail.port=587
##spring.mail.username=${SPRING_MAIL_USERNAME}
##spring.mail.password=${SPRING_MAIL_PASSWORD}  # your 16-char app password without spaces
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.starttls.enable=true
#
## custom property for "from" address
##app.mail.from=${SPRING_MAIL_USERNAME}
#spring.mail.username=springboottask@gmail.com
#spring.mail.password=oblnkcpcrstngztm
#app.mail.from=springboottask@gmail.com
